<?php

use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Psr7\Response;

$I = new ApiTester($scenario);
$I->wantTo('Add a new event chain');

$I->amSignatureAuthenticated("LtI60OqaM/gZbaeN8tWBJqOy7yiPwxSMZDo/aQvsPFzbJiGUQZ2iyDtBkL/+GJseJnUweTabuOn8RtR4V3MOKw==");

$data = [
    "id" => "CtBfprZ4zktW4mVhh1hhU76AvqEa3vtpc5vN6gkDX5W9f",
    "events" => [
        [
            "timestamp" => "1522425700",
            "body" => "2D5Gw6o78SjNqL2L3FPainPnNyeuHUwbck7v75u3KmWsUGbgGQuHya2Zu9sWbqJ8STuVrkWN1WwTVGE8hKuC6zXMJ2j2JJntQv3G8EYUZpHUeFYFML8RUS1drQw9ufMhF4K644NrLmpJ1ioiccUhewpspPWe8AhCJ2VYVaMUtmcjF95f9RMpWxgPsYX4Wn92rPHeEnM8oX9bFnZBhoh2v1HRDJwmgHnvhU6Lukc8DyCgHwXaR6rBCqwidDsQZJTGdn6LQNJTBVmEYuK1o7DK6Kysvx4nAuaQW5R21SaELtupLaSefnZuUC9LtsLELQDnzz9VgKXy8zUG7ZT6QtwbMEdXCzE5GFTFcMthcuN9PcdQWKY3VQP9o3ewQFJZ5JLWCLq17UYW7EYoT39CEZwttkX1vgDDdcKL4zrLFo5JduqfSVqQ72z4J8j8UQPdbQTNodDWhjKz1EBXa",
            "previous" => "7juAGSAfJJ2Th9SXGpm3u9XcLtMZzFaExbnCrnUAi1kn",
            "signkey" => "FkU1XyfrCftc4pQKXCrrDyRLSnifX1SMvmx1CYiiyB3Y",
            "signature" => "MR5XNoQsv7Li6oEUyZNBKJRcs1rn7VyymrxEdppfrWQqFVx8jMNL213R1XSpRvvb8m7awvNqH2QfWAeGwZXa1cS",
            "hash" => "3UUnVFXTPXnvSpP5yvZAbVsED6B1W2SNNirSbqShvofY"
        ],
        [
            "timestamp" => "1522425701",
            "body" => "",
            "previous" => "3UUnVFXTPXnvSpP5yvZAbVsED6B1W2SNNirSbqShvofY",
            "signkey" => "FkU1XyfrCftc4pQKXCrrDyRLSnifX1SMvmx1CYiiyB3Y",
            "signature" => "2EcdkQLMQtwPyyLsFrVXcEe2U7sD2bLxmgViqKbyzyepB1CfZ4L2maBowk7sZauXVm7c1AvfuvGTwxkP2wdpJ1JJ",
            "hash" => "6d4uy3G5LK2jkLudo6RK79KeHzuCi7P9RH1qgwbRxtxd"
        ],
        [
            "timestamp" => "1522425701",
            "body" => "2SwokuWCLbjvuatPFWpzQgbpEYZLGpnjfj19eMtSibTaLfEcW3R3CHcNoJqKqZCr69oQ2dfL9k8qcDh6mnpf37atsBLGT4akpKf7HCr2exhGyNwpr6Vo2cXAmCHqPTAMdbRUFBTmefgxGD7MggUQdudc5TAVJGNjNTGuJuzEaZJV7XL5k5pdkSDdhTgK62suhWemZV8Rvf7qTVjnYhEQ3HWwAQoaHzZrZEZxVoWX9LzR61DaCEGjTux5GFf5qB1d6i7GygNaidLWxHXGcygLtyS8Dbqi6Qx6iekzAc18yosGemZBVscTsFEGYTAFVfm9HsdyFutxS6JMLQLAjdwYFeSXxwkGywumDq38hDpZP892oyzCuhvjkY6YwQKgLMXUYsF5fxYaznNcCghygbnApPE2EYjZ79ixLvpRvWHMBUR3Dx9XQr8RpWs2hmzdErMDD6wbbSAEXe9oemr2Atncg53jNKwbEBPvwk1g2XLHTWL",
            "previous" => "6d4uy3G5LK2jkLudo6RK79KeHzuCi7P9RH1qgwbRxtxd",
            "signkey" => "FkU1XyfrCftc4pQKXCrrDyRLSnifX1SMvmx1CYiiyB3Y",
            "signature" => "4qw41coUs4YFVTVHx3pFGW4j9fqN3heg5UaMuLNQ2akBbquj9V4pNqdZUJGPV4TKtpDEfctqgm1AehfvMtEtzQ4Y",
            "hash" => "8xJMEqxj1yUqqvHZwhfec8VPvSs1XRXWFQq1ZafEFAsR"
        ]
    ]
];

// Scenario
$I->expectHttpRequest(function (Request $request) use ($I) {
    $I->assertEquals('http://legalflow/scenarios/', (string)$request->getUri());
    $I->assertEquals('application/json', $request->getHeaderLine('Content-Type'));
    
    $json = '{"$schema":"http://specs.livecontracts.io/draft-01/04-scenario/schema.json#","id":"lt:/scenarios/fe659ffa-537d-461a-abd7-aa0f3643d5ee?v=9zUysCou","name":"Accept or reject a quotation","description":"Accept or reject a quotation","keywords":[],"tags":[],"info":{},"assets":{"request":{"type":"object","properties":{"description":{"type":"string"},"urgency":{"type":"string","enum":["normal","high","critical"]}}},"quotation":{"$ref":"http://specs.livecontracts.io/draft-01/10-document/schema.json#"}},"actors":{"supplier":{"key":"supplier","title":"","description":""},"client":{"key":"client","title":"","description":""}},"actions":{"request_quotation":{"key":"request_quotation","title":"","description":"","actor":"client","date":"","hash":"","form":{"<ref>":"definitions.request_form"}},"invite_supplier":{"key":"invite_supplier","title":"","description":"","actor":"client","date":"","hash":""},"enter_client":{"key":"enter_client","title":"","description":"","actor":"supplier","date":"","hash":"","form":{"<ref>":"definitions.request_form"}},"invite_client":{"key":"invite_client","title":"","description":"","actor":"supplier","date":"","hash":""},"upload":{"key":"upload","title":"","description":"","actor":"supplier","date":"","hash":""},"review":{"key":"review","title":"","description":"","actor":"client","date":"","hash":""},"cancel":{"key":"cancel","title":"","description":"","actor":["client","supplier"],"date":"","hash":""}},"states":{":initial":{"title":"","description":"","instructions":{},"actions":["request_quotation"],"default_action":"","transitions":[{"action":"request_quotation","response":"","condition":false,"transition":"invite_supplier"},{"action":"enter_client","response":"","condition":false,"transition":"provide_quote"}],"timeout":""},"invite_supplier":{"title":"Waiting on the supplier to participate in this process","description":"","instructions":{},"actions":["invite_supplier","cancel"],"default_action":"invite_supplier","transitions":[{"action":"invite_supplier","response":"ok","condition":false,"transition":"wait_for_quote"}],"timeout":""},"provide_quote":{"title":"Prepare quotation","description":"","instructions":{},"actions":["upload","cancel"],"default_action":"upload","transitions":[{"action":"upload","response":"ok","condition":false,"transition":"invite_client"}],"timeout":""},"invite_client":{"title":"Waiting on the client to participate in this process","description":"","instructions":{},"actions":["invite_client","cancel"],"default_action":"invite_client","transitions":[{"action":"invite_client","response":"ok","condition":false,"transition":"wait_for_review"}],"timeout":""},"wait_for_quote":{"title":"Prepare quotation","description":"","instructions":{"supplier":{"<tpl>":" ( urgency)"}},"actions":["upload","cancel"],"default_action":"upload","transitions":[{"action":"upload","response":"ok","condition":false,"transition":"wait_for_review"}],"timeout":{"<switch>":{"on":{"<ref>":"assets.request.urgency"},"options":{"normal":"3b","high":"1b","critical":"6h"}}}},"wait_for_review":{"title":"Review quotation","description":"","instructions":{"client":"Please review and accept the quotation","supplier":"Please wait for the client to review the quotation."},"actions":["review","cancel"],"default_action":"review","transitions":[{"action":"review","response":"accept","condition":false,"transition":":success"},{"action":"review","response":"deny","condition":false,"transition":":failed"}],"timeout":"7d"}},"definitions":{"request_form":{"title":"Quotation request form","definition":[{"fields":[{"$schema":"http://specs.legalthings.one/draft-01/08-form/schema.json#select","label":"Supplier","name":"supplier","url":"https://jsonplaceholder.typicode.com/users","optionText":"name","optionValue":"{ name, email, phone }","required":true},{"$schema":"http://specs.legalthings.one/draft-01/08-form/schema.json#textarea","label":"Description","name":"description","helptip":"Which service would you like a quotation for?"},{"$schema":"http://specs.legalthings.one/draft-01/08-form/schema.json#select","label":"Urgency","name":"urgency","options":[{"value":"normal","label":"Normal"},{"value":"high","label":"High"},{"value":"critical","label":"Critical"}]}]}]},"client_form":{"title":"Enter client information","definition":[{"fields":[{"$schema":"http://specs.legalthings.one/draft-01/08-form/schema.json#text","label":"Name","name":"name","required":true},{"$schema":"http://specs.legalthings.one/draft-01/08-form/schema.json#email","label":"E-mail","name":"email","required":true}]}]}},"identity":{"id":"0c1d7eac-18ec-496a-8713-8e6e5f098686","name":"John Doe","email":"john.doe@example.com","node":"","signkeys":{"user":"FkU1XyfrCftc4pQKXCrrDyRLSnifX1SMvmx1CYiiyB3Y"},"encryptkey":"BVv1ZuE3gKFa6krwWJQwEmrLYUESuUabNCXgYTmCoBt6","privileges":null,"$schema":"http:\/\/specs.livecontracts.io\/draft-01\/02-identity\/schema.json#","timestamp":"2018-03-30T16:01:40+0000","info":null},"timestamp":"2018-03-30T16:01:41+0000"}';
    $I->assertJsonStringEqualsJsonString($json, (string)$request->getBody());
    
    return new Response(200);
});

// Response
$I->expectHttpRequest(function (Request $request) use ($I) {
    $I->assertEquals('http://legalflow/responses/', (string)$request->getUri());
    $I->assertEquals('application/json', $request->getHeaderLine('Content-Type'));

    $json = '{"$schema":"http:\/\/specs.livecontracts.io\/draft-01\/12-response\/schema.json#","process":{"id":"lt:\/processes\/111837c9-ff00-48e3-8c2d-63454a9dc234"},"actor":{"key":"client","id":"0c1d7eac-18ec-496a-8713-8e6e5f098686","name":"John Doe","email":"john.doe@example.com","node":"","signkeys":{"user":"FkU1XyfrCftc4pQKXCrrDyRLSnifX1SMvmx1CYiiyB3Y"},"encryptkey":"BVv1ZuE3gKFa6krwWJQwEmrLYUESuUabNCXgYTmCoBt6","schema":"http:\/\/specs.livecontracts.io\/draft-01\/02-identity\/schema.json#","info":null},"timestamp":"2018-03-30T16:01:41+0000","action":{"key":"request_quotation"},"display":"always","data":{"description":"asd","urgency":"high"}}';
    $I->assertJsonStringEqualsJsonString($json, (string)$request->getBody());
    
    return new Response(200);
});

// Process done
$I->expectHttpRequest(function (Request $request) use ($I) {
    $I->assertEquals('http://legalflow/processes/111837c9-ff00-48e3-8c2d-63454a9dc234/done', (string)$request->getUri());
    $I->assertEquals('application/json', $request->getHeaderLine('Content-Type'));

    $json = '{"id": "CtBfprZ4zktW4mVhh1hhU76AvqEa3vtpc5vN6gkDX5W9f", "lastHash": "8xJMEqxj1yUqqvHZwhfec8VPvSs1XRXWFQq1ZafEFAsR"}';
    $I->assertJsonStringEqualsJsonString($json, (string)$request->getBody());
    
    return new Response(200);
});

$I->haveHttpHeader('Content-Type', 'application/json');
$I->sendPOST('/event-chains', $data);

$I->dontSee("broken chain");
$I->seeResponseCodeIs(200);

$I->seeNumHttpRequestWare(3);

$I->seeInCollection('event_chains', [
    "_id" => "CtBfprZ4zktW4mVhh1hhU76AvqEa3vtpc5vN6gkDX5W9f"
]);

$dbRecord = $I->grabFromCollection('event_chains', [
    "_id" => "CtBfprZ4zktW4mVhh1hhU76AvqEa3vtpc5vN6gkDX5W9f"
]);

foreach ($data['events'] as &$event) {
    $event['receipt'] = null;
}
$I->assertMongoDocumentEquals($data['events'], $dbRecord->events);

$resources = [
    "lt:/scenarios/fe659ffa-537d-461a-abd7-aa0f3643d5ee",
    "lt:/processes/111837c9-ff00-48e3-8c2d-63454a9dc234"
];
$I->assertMongoDocumentEquals($resources, $dbRecord->resources);
